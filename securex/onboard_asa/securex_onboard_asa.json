{
  "workflow": {
    "unique_name": "definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j",
    "name": "Onboard ASAs",
    "title": "Onboard ASAs",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "connectivityError",
          "type": "datatype.string",
          "description": "To hold connectivityError if any",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XJNIWJD6XZ11VrJo36KfNBOtL3RCOpSNv",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "admin_username",
          "type": "datatype.string",
          "description": "The username of the administrator that CDO will use to configure the ASA. This password should have been encrypted using the SDC's public key.",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCC5Y86ZI7D2TQnW8jjMi08JKtzq7p4zk",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "admin_password",
          "type": "datatype.secure_string",
          "description": "The password of the administrator account that CDO will use to configure the ASA. This password should have been encrypted using the SDC's public key.",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCC6K6K3LEO1WEVS86W7GVFyrEAhhceDU",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "ignore_certificate",
          "type": "datatype.boolean",
          "description": "Set to True if the ASA has an invalid certificate and you would still like to onboard it. After onboarding, the very next thing should be to install a valid certificate! ",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XJ05JEWVW474vvc55tD40ZEmIivYzOmBf",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "local",
          "name": "counter",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCS9Y4PH70G1OeiU63MGvIK0he0i0zaYe",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "sdc_uid",
          "type": "datatype.string",
          "description": "The UID of the SDC",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCBWBJYV5PL74L2jwJFw03d41WzdIETK4",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "aws api key",
          "type": "datatype.secure_string",
          "description": "The API key required for the AWS API gateway fot the lambda function that encrypts passwords with the given key.",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XME2BGG1ZMU4vX8Pt5HEWOUEoUwMDxsIK",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "cdo_api_key",
          "type": "datatype.secure_string",
          "description": "Stores the API key used throughout the workflow",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "connector_name",
          "type": "datatype.string",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCBPOVZ6YJA5plGwaKV6M1obCbEyyV95Y",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "device_name",
          "type": "datatype.string",
          "description": "What we want to name the device in CDO and FMC",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCB76HRVEWE0Qvj4vTlvDGlGZZkyefyXb",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 443,
          "scope": "input",
          "name": "asa_port",
          "type": "datatype.integer",
          "description": "The http port that the ASA management port is listening on.",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCC5FPGMVL37c4mFi4kq0UbbSjcbHzXQk",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "asa_ip",
          "type": "datatype.string",
          "description": "The management IP of the ASA to onboard",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCC4U9PEAWA44BjX9XMKZTKnVbqKGtXkM",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "empty_string",
          "type": "datatype.string",
          "description": "An empty string to use for comparions operators",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCB76HRURSG0jSR6BDtRVFJgHHZuIUxiT",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "lar_type",
          "type": "datatype.string",
          "description": "if CDG set to CDG, if onprem_sdc or cloud_sdc set to SDC.",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCDWQ0X9I4I4tsiTh60jTkxJzNj4L2rHT",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "lar_key_id",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XD0XWMC84296tgOjR2MUNJ42itSZKzSLH",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "specific_device_uid",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XCSJIFK7I143HZK2xDLXHz4K330c3ZJpP",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "lar_public_key",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XD0Y0E3CRNX0yUNbwYOJzVg0SX8wk9UNi",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Be sure that \"TARGET\" is set to the CDO Region where you want to deploy. (US, EMEA, APJ).\n\nThis POC workflow calls an AWS lambda that takes the SDC public key and the ASA crednetials and returns them encrypted. See the Github README for more details.\n\nOnboard an ASAs to CDO. webhook payload:\n{\n\t\"cdo_api_key\": \"xxx\",\n\t\"device_name\": \"xxx\",\n\t\"sdc_name\": \"xxx\",\n\t\"admin_username\": \"xxx\",\n\t\"admin_password\": \"xxx\",\n\t\"asa_ip\": \"xxx\",\n\t\"asa_port\": \"xxx\",\n\t\"ignore_certificate\": \"xxx\",\n\t\"cd_api_key\": \"xxx\",\n\t\"aws_api_key\": \"xxx\"\n}",
      "display_name": "Onboard ASAs",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "target_id": "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR",
        "execute_on_workflow_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01XCB76MU5H2G1uSkGXirbWRM6obXOqY44M",
        "name": "Condition Block",
        "title": "Check Webhook Start",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check Webhook Start",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XCB76NWN09Q1VOJtDOCBrltzJsyMyGfGH",
            "name": "Condition Branch",
            "title": "Is Started by Webhook",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.started_by$",
                "operator": "eq",
                "right_operand": "triggerevent_01XMTTXKAGZ6U0lIi91tqdKmvlAM078Zt50"
              },
              "continue_on_failure": false,
              "description": "If the workflow is started by the webhook, we need to set the input variable from the webook POST payload",
              "display_name": "Is Started by Webhook",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t",
                "name": "JSONPath Query",
                "title": "JSONPath Query",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "JSONPath Query",
                  "input_json": "$trigger.triggerevent_01XMTTXKAGZ6U0lIi91tqdKmvlAM078Zt50.output.request_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.device_name",
                      "jsonpath_query_name": "device_name",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.sdc_name",
                      "jsonpath_query_name": "sdc_name",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.admin_username",
                      "jsonpath_query_name": "admin_username",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.admin_password",
                      "jsonpath_query_name": "admin_password",
                      "jsonpath_query_type": "secure_string"
                    },
                    {
                      "jsonpath_query": "$.asa_ip",
                      "jsonpath_query_name": "asa_ip",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.asa_port",
                      "jsonpath_query_name": "asa_port",
                      "jsonpath_query_type": "integer"
                    },
                    {
                      "jsonpath_query": "$.ignore_certificate",
                      "jsonpath_query_name": "ignore_certificate",
                      "jsonpath_query_type": "boolean"
                    },
                    {
                      "jsonpath_query": "$.cdo_api_key",
                      "jsonpath_query_name": "cdo_api_key",
                      "jsonpath_query_type": "secure_string"
                    },
                    {
                      "jsonpath_query": "$.aws_api_key",
                      "jsonpath_query_name": "aws_api_key",
                      "jsonpath_query_type": "secure_string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XCB76QNA4A74eCQtgJWRW6FRDTgF4nQB1",
                "name": "Set Variables",
                "title": "Update input vars",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Update input vars",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVEWE0Qvj4vTlvDGlGZZkyefyXb$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.device_name$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCBPOVZ6YJA5plGwaKV6M1obCbEyyV95Y$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.sdc_name$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5Y86ZI7D2TQnW8jjMi08JKtzq7p4zk$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.admin_username$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC6K6K3LEO1WEVS86W7GVFyrEAhhceDU$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.admin_password$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC4U9PEAWA44BjX9XMKZTKnVbqKGtXkM$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.asa_ip$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5FPGMVL37c4mFi4kq0UbbSjcbHzXQk$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.asa_port$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XJ05JEWVW474vvc55tD40ZEmIivYzOmBf$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.ignore_certificate$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.cdo_api_key$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XME2BGG1ZMU4vX8Pt5HEWOUEoUwMDxsIK$",
                      "variable_value_new": "$activity.definition_activity_01XCB76P1ZD147RjZf26hFgUf0zlIB0Rj8t.output.jsonpath_queries.aws_api_key$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCB76TC0AHA5WFrb6JxcK1n0jwwDr8bGs",
        "name": "HTTP Request",
        "title": "Check for duplicate name",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
            }
          ],
          "description": "Check to see if the proposed name is already in use.",
          "display_name": "Check for duplicate name",
          "method": "GET",
          "relative_url": "/aegis/rest/v1/services/targets/devices?agg=count&q=name:$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVEWE0Qvj4vTlvDGlGZZkyefyXb$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XCB76UCCN2U1VVftwUb9qr2u9eJShxTLU",
        "name": "JSONPath Query",
        "title": "Extract duplicate name count",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract duplicate name count",
          "input_json": "$activity.definition_activity_01XCB76TC0AHA5WFrb6JxcK1n0jwwDr8bGs.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.aggregationQueryResult",
              "jsonpath_query_name": "aggregationQueryResult",
              "jsonpath_query_type": "integer"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XCB76VDV2CK0iIP9aINxnRT7kpYAGCgSH",
        "name": "Condition Block",
        "title": "Is Unique Device Name",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Check to see if the device name supplied already exists.",
          "display_name": "Is Unique Device Name",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XCB76WDFRIE0dzCWKgUBMfAFbegElCJRC",
            "name": "Condition Branch",
            "title": "Is Name Duplicate",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XCB76UCCN2U1VVftwUb9qr2u9eJShxTLU.output.jsonpath_queries.aggregationQueryResult$",
                "operator": "gt",
                "right_operand": 0
              },
              "continue_on_failure": false,
              "display_name": "Is Name Duplicate",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XCB76XKCQQ53qUe4SQdmgBWWci8ULCaT0",
                "name": "Completed",
                "title": "End Workflow With Duplicate Name",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "End Workflow With Duplicate Name",
                  "result_message": "The device name $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVEWE0Qvj4vTlvDGlGZZkyefyXb$ already exists in CDO inventory.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCBSWH44LY84ku4KicdOTJk5aVf01HRXs",
        "name": "HTTP Request",
        "title": "Get List of Connectors",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
            }
          ],
          "description": "Gets a list of all connectors:\nonprem_sdc\ncloud_sdc\ncdg",
          "display_name": "Get List of Connectors",
          "method": "GET",
          "relative_url": "/aegis/rest/v1/services/targets/proxies",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XCYFCDMYMDL7VYBZdAbum2tClGv8cpZhJ",
        "name": "JSONPath Query",
        "title": "Match Connector Name",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "jsonpath query to match the connector name to the input variable connector_name",
          "display_name": "Match Connector Name",
          "input_json": "{\"results\":$activity.definition_activity_01XCBSWH44LY84ku4KicdOTJk5aVf01HRXs.output.response_body$}",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.results[?(@.name=='$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCBPOVZ6YJA5plGwaKV6M1obCbEyyV95Y$')]",
              "jsonpath_query_name": "result",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT",
        "name": "JSONPath Query",
        "title": "Extract Connector Components",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract Connector Components",
          "input_json": "$activity.definition_activity_01XCYFCDMYMDL7VYBZdAbum2tClGv8cpZhJ.output.jsonpath_queries.result$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "uid",
              "jsonpath_query_name": "lar_uid",
              "jsonpath_query_type": "string"
            },
            {
              "jsonpath_query": "name",
              "jsonpath_query_name": "name",
              "jsonpath_query_type": "string"
            },
            {
              "jsonpath_query": "cdg",
              "jsonpath_query_name": "cdg",
              "jsonpath_query_type": "boolean"
            },
            {
              "jsonpath_query": "larPublicKey",
              "jsonpath_query_name": "larPublicKey",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XIWW3RWRMO45SzvwneJXVA8xpUvkVujw1",
        "name": "Condition Block",
        "title": "Set LAR Type",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Set LAR Type",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XIWW3SZQ0CL5GDl7e47XYmv65rujF4cmZ",
            "name": "Condition Branch",
            "title": "Is CDG",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT.output.jsonpath_queries.cdg$",
                "operator": "eq",
                "right_operand": true
              },
              "continue_on_failure": false,
              "display_name": "Is CDG",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XIWWTHV723H06Pxbc6FDK40oDPdaGIWah",
                "name": "Set Variables",
                "title": "Set LAR CDG",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set LAR CDG",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCDWQ0X9I4I4tsiTh60jTkxJzNj4L2rHT$",
                      "variable_value_new": "CDG"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01XIWW3U3PHTH75KfHrUEEcWc6PT0j6qi8v",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$"
              },
              "continue_on_failure": false,
              "description": "we use instance_id = instance_id in order to make this like an \"else statement\" In otherwords, if the initial IF condition is false, this branch will alway execute.",
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XIWXH1YQF4F17uLTEVVlAJfAFsUMSmIbZ",
                "name": "Set Variables",
                "title": "Set LAR SDC",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set LAR SDC",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCDWQ0X9I4I4tsiTh60jTkxJzNj4L2rHT$",
                      "variable_value_new": "SDC"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XD0NYHLA4467VoDNxQW4PwdL9zHNSchzp",
        "name": "Condition Block",
        "title": "Check for larPublicKey",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check for larPublicKey",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XD0NYI1Q4GE5IZQBhCojTJduHISP8fGyY",
            "name": "Condition Branch",
            "title": "is larPublicKey",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT.output.jsonpath_queries.larPublicKey$",
                "operator": "ne",
                "right_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCB76HRURSG0jSR6BDtRVFJgHHZuIUxiT$"
              },
              "continue_on_failure": false,
              "display_name": "is larPublicKey",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XD0QZG48JUF3cfCo8bqhGshInkLb7P3Zz",
                "name": "JSONPath Query",
                "title": "Extract lar public key components",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Extract lar public key components",
                  "input_json": "$activity.definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT.output.jsonpath_queries.larPublicKey$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.encodedKey",
                      "jsonpath_query_name": "encoded_key",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.version",
                      "jsonpath_query_name": "version",
                      "jsonpath_query_type": "integer"
                    },
                    {
                      "jsonpath_query": "$.keyId",
                      "jsonpath_query_name": "key_id",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XD0YCM3Y7KJ0BYq8NYHhffd7bFFsJtdam",
                "name": "Set Variables",
                "title": "Set Lar Public Key",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Lar Public Key",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XD0Y0E3CRNX0yUNbwYOJzVg0SX8wk9UNi$",
                      "variable_value_new": "$activity.definition_activity_01XD0QZG48JUF3cfCo8bqhGshInkLb7P3Zz.output.jsonpath_queries.encoded_key$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XD0XWMC84296tgOjR2MUNJ42itSZKzSLH$",
                      "variable_value_new": "$activity.definition_activity_01XD0QZG48JUF3cfCo8bqhGshInkLb7P3Zz.output.jsonpath_queries.key_id$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XME2M8BMXZT7jog5pwDefxU4qVExiL5RD",
                "name": "HTTP Request",
                "title": "Encrypt ASA Credentials",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "body": "{\"username\":\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5Y86ZI7D2TQnW8jjMi08JKtzq7p4zk$\", \"password\":\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC6K6K3LEO1WEVS86W7GVFyrEAhhceDU$\", \"public_key\":\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XD0Y0E3CRNX0yUNbwYOJzVg0SX8wk9UNi$\"}",
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "X-API-Key",
                      "value": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XME2BGG1ZMU4vX8Pt5HEWOUEoUwMDxsIK$"
                    }
                  ],
                  "description": "Given the RSA public key from the SDC, encrypt the credentialsto pass on to the SDC.",
                  "display_name": "Encrypt ASA Credentials",
                  "method": "POST",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": true,
                    "target_id": "definition_target_01XME75GPATG83i14iLrq9HhkjqQXLv3IOf"
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XMEF3HW0ZAS0efKATBuY9JabuxW2L3MHg",
                "name": "JSONPath Query",
                "title": "Extract encrypted credentials",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Extract encrypted credentials",
                  "input_json": "$activity.definition_activity_01XME2M8BMXZT7jog5pwDefxU4qVExiL5RD.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.username",
                      "jsonpath_query_name": "enc_username",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.password",
                      "jsonpath_query_name": "enc_password",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XMEGBH940J16BjjR8WojTJleFLaftk3y5",
                "name": "Set Variables",
                "title": "Update username and password",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Update the username and password value with the encrypted strings.",
                  "display_name": "Update username and password",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5Y86ZI7D2TQnW8jjMi08JKtzq7p4zk$",
                      "variable_value_new": "$activity.definition_activity_01XMEF3HW0ZAS0efKATBuY9JabuxW2L3MHg.output.jsonpath_queries.enc_username$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC6K6K3LEO1WEVS86W7GVFyrEAhhceDU$",
                      "variable_value_new": "$activity.definition_activity_01XMEF3HW0ZAS0efKATBuY9JabuxW2L3MHg.output.jsonpath_queries.enc_password$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCB77C7C86868vBhYIBSHCJQw0756iQo0",
        "name": "Condition Block",
        "title": "Check Connector Found",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check Connector Found",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XCB77D8JPZA2cH0qa0FGgU2hg3SzUBrNQ",
            "name": "Condition Branch",
            "title": "Is Connector Not Found",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT.output.jsonpath_queries.lar_uid$",
                "operator": "eq",
                "right_operand": ""
              },
              "continue_on_failure": false,
              "display_name": "Is Connector Not Found",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XCB77ECUO3B0uNlpCEIo8fzkz5P2XMAbR",
                "name": "Completed",
                "title": "Connector not Found",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "description": "A Connector name and type was provided but not found in the tenant.",
                  "display_name": "Connector not Found",
                  "result_message": "The SDC named \"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCBPOVZ6YJA5plGwaKV6M1obCbEyyV95Y$\" was not found in the tenant.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCDLFAGBJFS2l0WuaU5dxdbwaUYJ6aZ4i",
        "name": "HTTP Request",
        "title": "Add Device to CDO",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "body": "{\n    \"deviceType\": \"ASA\",\n    \"host\": \"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC4U9PEAWA44BjX9XMKZTKnVbqKGtXkM$\",\n    \"ipv4\": \"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC4U9PEAWA44BjX9XMKZTKnVbqKGtXkM$:$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5FPGMVL37c4mFi4kq0UbbSjcbHzXQk$\",\n    \"larType\": \"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCDWQ0X9I4I4tsiTh60jTkxJzNj4L2rHT$\",\n    \"larUid\": \"$activity.definition_activity_01XCYLD55QTUY3yfQldCZUvUC8OXjts1VRT.output.jsonpath_queries.lar_uid$\",\n    \"model\": false,\n    \"name\": \"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVEWE0Qvj4vTlvDGlGZZkyefyXb$\",\n    \"metadata\": {\n        \"isNewPolicyObjectModel\": \"true\"\n    }\n}",
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
            }
          ],
          "display_name": "Add Device to CDO",
          "method": "POST",
          "relative_url": "/aegis/rest/v1/services/targets/devices",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XCS855Z27OC3l4se6ltImUAwWit1VxvA0",
        "name": "JSONPath Query",
        "title": "Extract Device uid",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Get the newly created device's uid",
          "display_name": "Extract Device uid",
          "input_json": "$activity.definition_activity_01XCDLFAGBJFS2l0WuaU5dxdbwaUYJ6aZ4i.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.uid",
              "jsonpath_query_name": "uid",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XJNB273LYQK1AmCFalLgmgjepn9ofHp71",
        "name": "While Loop",
        "title": "Wait for initial device contact",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Wait for initial device contact",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XJNB27MYOD03D5EFnNpEEKRiymN3eJ9NX",
            "name": "Condition Branch",
            "title": "While Loop",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$"
              },
              "continue_on_failure": false,
              "display_name": "While Loop",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XJLC89XMQ0P4NOoSMPabdDKJLJL3egZUG",
                "name": "HTTP Request",
                "title": "Get Device details",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
                    }
                  ],
                  "display_name": "Get Device details",
                  "method": "GET",
                  "relative_url": "/aegis/rest/v1/services/targets/devices/$activity.definition_activity_01XCS855Z27OC3l4se6ltImUAwWit1VxvA0.output.jsonpath_queries.uid$",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XJNEJALD3L659H4oavYCaDMx3MqlGkNNx",
                "name": "JSONPath Query",
                "title": "Extract Connectivity State",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "The connectivity state \"unknown\" (-5) will be the state until something happens like being unreachable or detecting an invalid certificate.",
                  "display_name": "Extract Connectivity State",
                  "input_json": "$activity.definition_activity_01XJLC89XMQ0P4NOoSMPabdDKJLJL3egZUG.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.connectivityState",
                      "jsonpath_query_name": "connectivityState",
                      "jsonpath_query_type": "integer"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XJNEDDFBS5D6W96lbjVQW0GrvE1g3qiMQ",
                "name": "Condition Block",
                "title": "Is Connection State Unknown",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Is Connection State Unknown",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01XJNEDDV6F4C0yZM15c4fHlhsTI37qMRQI",
                    "name": "Condition Branch",
                    "title": "Is Connectivity State Not -5",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01XJNEJALD3L659H4oavYCaDMx3MqlGkNNx.output.jsonpath_queries.connectivityState$",
                        "operator": "ne",
                        "right_operand": -5
                      },
                      "continue_on_failure": false,
                      "display_name": "Is Connectivity State Not -5",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XJLEGIRIXCK4xlzqiYUIVGF9CNSQgFn9F",
                        "name": "JSONPath Query",
                        "title": "Extract Errors if any",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Extract Errors if any",
                          "input_json": "$activity.definition_activity_01XJLC89XMQ0P4NOoSMPabdDKJLJL3egZUG.output.response_body$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.connectivityError",
                              "jsonpath_query_name": "connectivityError",
                              "jsonpath_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XJNJ12JAZZZ3HWGpBJ0IKSNsKxD1KDdkA",
                        "name": "Set Variables",
                        "title": "Set connectivityError if any",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set connectivityError if any",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XJNIWJD6XZ11VrJo36KfNBOtL3RCOpSNv$",
                              "variable_value_new": "$activity.definition_activity_01XJLEGIRIXCK4xlzqiYUIVGF9CNSQgFn9F.output.jsonpath_queries.connectivityError$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XJNH6ZFBOIO6prJ9kFl6NbEcwYfhugvSY",
                        "name": "Break",
                        "title": "Break",
                        "type": "logic.break",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Continue the workflow",
                          "display_name": "Break",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XJ05PN8ULJH0INAgnjuAboZSqFbSruLx5",
        "name": "Condition Block",
        "title": "Is Certificate Valid",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Is Certificate Valid",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XJ05PNTRF5P5Cae8wAB3ZmR5ndHJZXNtz",
            "name": "Condition Branch",
            "title": "Certificate not valid but trust",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XJNIWJD6XZ11VrJo36KfNBOtL3RCOpSNv$",
                  "operator": "mregex",
                  "right_operand": ".*certificate.*"
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XJ05JEWVW474vvc55tD40ZEmIivYzOmBf$",
                  "operator": "eq",
                  "right_operand": true
                }
              },
              "continue_on_failure": false,
              "description": "If the certiciate was not valid, depending on the level of trust set by the \"ignore_certificate\" variable, either die here or continue with the invalid certificate. ",
              "display_name": "Certificate not valid but trust",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XJLNGITD9JJ33nEKn4DgnLohoqCy1ZJSR",
                "name": "HTTP Request",
                "title": "Ignore Certificate Validity",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "body": "{\"ignoreCertificate\":true}",
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
                    }
                  ],
                  "description": "Not recommneded but if we are told to trust the invalid certificate, go ahead and tell CDO to trust this invalid certificate. ** DANGER WILL ROBINSON **",
                  "display_name": "Ignore Certificate Validity",
                  "method": "PUT",
                  "relative_url": "/aegis/rest/v1/services/targets/devices/$activity.definition_activity_01XCS855Z27OC3l4se6ltImUAwWit1VxvA0.output.jsonpath_queries.uid$",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01XJNNJJ29DOE32Ku1mrDXWnzRtXXkOTvkK",
            "name": "Condition Branch",
            "title": "Certificate not valid DON't trust!",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XJNIWJD6XZ11VrJo36KfNBOtL3RCOpSNv$",
                  "operator": "mregex",
                  "right_operand": ".*certificate.*"
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XJ05JEWVW474vvc55tD40ZEmIivYzOmBf$",
                  "operator": "eq",
                  "right_operand": false
                }
              },
              "continue_on_failure": false,
              "description": "If the certiciate was not valid, depending on the level of trust set by the \"ignore_certificate\" variable, either die here or continue with the invalid certificate. ",
              "display_name": "Certificate not valid DON't trust!",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XJNTFX1WBB32EWJSPdwYVxCg3LCxfO3oy",
                "name": "HTTP Request",
                "title": "Delete Untrusted Device",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "content_type": "application/json",
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
                    }
                  ],
                  "description": "We have decided not to trust this device, so abort the onboarding process by deleting the device. ",
                  "display_name": "Delete Untrusted Device",
                  "method": "DELETE",
                  "relative_url": "/aegis/rest/v1/services/targets/devices/$activity.definition_activity_01XCS855Z27OC3l4se6ltImUAwWit1VxvA0.output.jsonpath_queries.uid$",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XJNO031VT7B3le866uPOoHxNADvVk4eA0",
                "name": "Completed",
                "title": "Completed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Completed",
                  "result_message": "An invalid certificate on the ASA is preventing us from onboaring this device.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCB783362F47msxStXLVNIMrt8ZhdlhFR",
        "name": "While Loop",
        "title": "While Loop",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "While Loop",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XCB78415B4Y4f8BPHDFwZuay2VleboVuy",
            "name": "Condition Branch",
            "title": "Make Sure Device Exists in CDO",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$"
              },
              "continue_on_failure": false,
              "description": "Before we move to the next step, make sure the previous call has had a chance to be processed and added to the CDO backend.",
              "display_name": "Make Sure Device Exists in CDO",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XCB7859B6K51CyCG7HoQJhEmL895HAMvF",
                "name": "HTTP Request",
                "title": "Get Specific Device",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
                    }
                  ],
                  "description": "Try to retrieve the specific device that was supposed to be created by the previous call. If we get a 200OK back, then we are good to move on. Otherwise, wait 5 seconds and try again.",
                  "display_name": "Get Specific Device",
                  "method": "GET",
                  "relative_url": "aegis/rest/v1/device/$activity.definition_activity_01XCS855Z27OC3l4se6ltImUAwWit1VxvA0.output.jsonpath_queries.uid$/specific-device",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XCB786Y7R4C21lkGwgBXKFudou3sCIGy3",
                "name": "Condition Block",
                "title": "Is device found",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "if the device is found, we are clear to proceed.",
                  "display_name": "Is device found",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01XCB787XAVF90vElyOCksmkOp3cQmOZ5TX",
                    "name": "Condition Branch",
                    "title": "Device Not Found",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01XCB7859B6K51CyCG7HoQJhEmL895HAMvF.output.status_code$",
                        "operator": "ne",
                        "right_operand": 200
                      },
                      "continue_on_failure": false,
                      "display_name": "Device Not Found",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XCB78963AOH7J311uL8DDlfwpXGcqRYGM",
                        "name": "Set Variables",
                        "title": "Increment Counter",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": true,
                          "display_name": "Increment Counter",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCS9Y4PH70G1OeiU63MGvIK0he0i0zaYe$",
                              "variable_value_new": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCS9Y4PH70G1OeiU63MGvIK0he0i0zaYe$ + 1"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XCB78A471OY69LN4fCWYqHmiIC3WY949e",
                        "name": "Sleep",
                        "title": "Wait 5 Seconds",
                        "type": "core.sleep",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Wait 5 Seconds",
                          "skip_execution": false,
                          "sleep_interval": 5
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XCB78B2RWVM6pQUsEqVQNgXjuKjG38MaB",
                        "name": "Condition Block",
                        "title": "Check Retry Exceeded",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Check to see if the number of retries have been exceeded.",
                          "display_name": "Check Retry Exceeded",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_01XCB78C1I0C40t5vTO117hBpJhXNQIjByh",
                            "name": "Condition Branch",
                            "title": "Is retry exceeded",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCS9Y4PH70G1OeiU63MGvIK0he0i0zaYe$",
                                "operator": "gt",
                                "right_operand": 10
                              },
                              "continue_on_failure": false,
                              "display_name": "Is retry exceeded",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01XCB78D4XVKK2e6zpzkz6StnPpuh0fjL4W",
                                "name": "Completed",
                                "title": "Exit - Failure",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Exit - Failure",
                                  "result_message": "Failed to add device to CDO Database",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01XCB78EB646M51Q3poDut9Zfbx4pAzlTLp",
                    "name": "Condition Branch",
                    "title": "Device Found",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$",
                        "operator": "eq",
                        "right_operand": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.output.instance_id$"
                      },
                      "continue_on_failure": false,
                      "display_name": "Device Found",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XCB78FDTKBX3Bq2le06YLB7WErdenMGLi",
                        "name": "JSONPath Query",
                        "title": "Extract Specific Device uid",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Extract Specific Device uid",
                          "input_json": "$activity.definition_activity_01XCB7859B6K51CyCG7HoQJhEmL895HAMvF.output.response_body$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.uid",
                              "jsonpath_query_name": "specific_device_uid",
                              "jsonpath_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XCB78GVVYW55M98YXGwgwKvyukXRFFzEX",
                        "name": "Set Variables",
                        "title": "Set Specific Device UID",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Specific Device UID",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCSJIFK7I143HZK2xDLXHz4K330c3ZJpP$",
                              "variable_value_new": "$activity.definition_activity_01XCB78FDTKBX3Bq2le06YLB7WErdenMGLi.output.jsonpath_queries.specific_device_uid$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XCB78I0BQ8N07W2IQKfyWNJr1mgPg88Cc",
                        "name": "Break",
                        "title": "Proceed to the Next Step",
                        "type": "logic.break",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Proceed to the Next Step",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XCSKOL8G8MA01AqZjtjZBU3xqnK3J2LCm",
        "name": "HTTP Request",
        "title": "Add ASA Credentials",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "body": "{\n  \"state\": \"CERT_VALIDATED\",\n  \"credentials\": \"{\\\"keyId\\\":\\\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XD0XWMC84296tgOjR2MUNJ42itSZKzSLH$\\\",\\\"username\\\":\\\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC5Y86ZI7D2TQnW8jjMi08JKtzq7p4zk$\\\",\\\"password\\\":\\\"$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCC6K6K3LEO1WEVS86W7GVFyrEAhhceDU$\\\"}\"\n}",
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.input.variable_workflow_01XCB76HRVW9C7eM0EwWlhb8vYxViofwOm1$"
            }
          ],
          "description": "Now that the device exists in CDO, add the credentials.",
          "display_name": "Add ASA Credentials",
          "method": "PUT",
          "relative_url": "/aegis/rest/v1/services/asa/configs/$workflow.definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j.local.variable_workflow_01XCSJIFK7I143HZK2xDLXHz4K330c3ZJpP$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "triggers": {
    "triggerevent_01XMTTXKAGZ6U0lIi91tqdKmvlAM078Zt50": {
      "workflow_id": "definition_workflow_01XCB76HE7GMD6ChPo7lbo4jEcoTcspQj2j",
      "name": "onboard_asa",
      "title": "",
      "lowercase_name": "event.onboard_asa",
      "description": "Onboard ASA via webhook. Payload:\n{\n\t\"cdo_api_key\": \"\",\n\t\"device_name\": \"\",\n\t\"sdc_name\": \"\",\n\t\"admin_username\": \"\",\n\t\"admin_password\": \"\",\n\t\"asa_ip\": \"\",\n\t\"asa_port\": \"\",\n\t\"ignore_certificate\": \"\",\n\t\"cd_api_key\": \"\",\n\t\"aws_api_key\": \"\"\n}",
      "type": "event",
      "base_type": "trigger",
      "ref_id": "event_webhook_01XMTTV86SSNF6zv1fJOrILgKXhY7WEl91y",
      "version": "1.0.0",
      "disabled": false,
      "unique_name": "triggerevent_01XMTTXKAGZ6U0lIi91tqdKmvlAM078Zt50",
      "object_type": "triggerevent"
    }
  },
  "events": {
    "event_webhook_01XMTTV86SSNF6zv1fJOrILgKXhY7WEl91y": {
      "name": "Onboard ASA Event",
      "title": "Onboard ASA Event",
      "description": "{\n\t\"cdo_api_key\": \"\",\n\t\"device_name\": \"\",\n\t\"sdc_name\": \"\",\n\t\"admin_username\": \"\",\n\t\"admin_password\": \"\",\n\t\"asa_ip\": \"\",\n\t\"asa_port\": \"\",\n\t\"ignore_certificate\": \"\",\n\t\"cd_api_key\": \"\",\n\t\"aws_api_key\": \"\"\n}",
      "type": "webhook.event",
      "base_type": "event",
      "object_type": "event_webhook",
      "target_id": "",
      "webhook_id": "webhook_01XMTTPRE1T0S5h0z2GGD61HYwZ0K8nPLeX",
      "version": "1.0.0",
      "properties": {
        "description": "{\n\t\"cdo_api_key\": \"\",\n\t\"device_name\": \"\",\n\t\"sdc_name\": \"\",\n\t\"admin_username\": \"\",\n\t\"admin_password\": \"\",\n\t\"asa_ip\": \"\",\n\t\"asa_port\": \"\",\n\t\"ignore_certificate\": \"\",\n\t\"cd_api_key\": \"\",\n\t\"aws_api_key\": \"\"\n}",
        "title": "Onboard ASA Event",
        "webhook_id": "webhook_01XMTTPRE1T0S5h0z2GGD61HYwZ0K8nPLeX"
      },
      "unique_name": "event_webhook_01XMTTV86SSNF6zv1fJOrILgKXhY7WEl91y"
    }
  },
  "targets": {
    "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR": {
      "unique_name": "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR",
      "name": "CDO-US",
      "title": "CDO-US",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "CDO-US",
        "host": "www.defenseorchestrator.com",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "port": 443,
        "protocol": "https"
      }
    },
    "definition_target_01XME75GPATG83i14iLrq9HhkjqQXLv3IOf": {
      "unique_name": "definition_target_01XME75GPATG83i14iLrq9HhkjqQXLv3IOf",
      "name": "AWS Lambda Password Encrypt",
      "title": "AWS Lambda Password Encrypt",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "description": "AWS Lambda to encrypt username and password if an RSA public key is provided. Requires header X-API-KEY: xxxxx and payload:\n{\n\t\"username\": \"my_username\",\n\t\"password\": \"mysecretpassword\",\n\t\"public_key\": \"rsa_pub_key...\"\n}",
        "disable_certificate_validation": false,
        "display_name": "AWS Lambda Password Encrypt",
        "host": "x1q6uhonxf.execute-api.us-east-2.amazonaws.com",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "path": "/default/RSAEncryptString",
        "protocol": "https"
      }
    }
  },
  "webhooks": {
    "webhook_01XMTTPRE1T0S5h0z2GGD61HYwZ0K8nPLeX": {
      "name": "Onboard ASA Webhook",
      "title": "Onboard ASA Webhook",
      "description": "{\n\t\"cdo_api_key\": \"\",\n\t\"device_name\": \"\",\n\t\"sdc_name\": \"\",\n\t\"admin_username\": \"\",\n\t\"admin_password\": \"\",\n\t\"asa_ip\": \"\",\n\t\"asa_port\": \"\",\n\t\"ignore_certificate\": \"\",\n\t\"cd_api_key\": \"\",\n\t\"aws_api_key\": \"\"\n}",
      "type": "generic.webhook",
      "base_type": "webhook",
      "object_type": "webhook",
      "version": "1.0.0",
      "properties": {
        "description": "{\n\t\"cdo_api_key\": \"\",\n\t\"device_name\": \"\",\n\t\"sdc_name\": \"\",\n\t\"admin_username\": \"\",\n\t\"admin_password\": \"\",\n\t\"asa_ip\": \"\",\n\t\"asa_port\": \"\",\n\t\"ignore_certificate\": \"\",\n\t\"cd_api_key\": \"\",\n\t\"aws_api_key\": \"\"\n}",
        "display_name": "Onboard ASA Webhook",
        "request_content_type": "application/json"
      },
      "unique_name": "webhook_01XMTTPRE1T0S5h0z2GGD61HYwZ0K8nPLeX"
    }
  }
}