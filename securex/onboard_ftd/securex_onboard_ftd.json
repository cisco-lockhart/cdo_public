{
  "workflow": {
    "unique_name": "definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo",
    "name": "Onboard FTD",
    "title": "Onboard FTD",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Default Access Control Policy",
          "scope": "input",
          "name": "policy",
          "type": "datatype.string",
          "description": "Policy to apply to the newly onboarded device",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XB6OX2VFTRR3tKUlVzGGsC6heiU5Am3Yu",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "temp",
          "type": "datatype.string",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAJEVBYWAKG3suS69lI6HLhCJQ3iBmAOS",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "empty_string",
          "type": "datatype.string",
          "description": "An empty string to use for comparions operators",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XABIGBGXU0I0OZnXFeQlnbSSRdWDnpsXx",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "is_threat",
          "type": "datatype.boolean",
          "description": "true if threat license required",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAC548W8C4B1sgysGDY1qTML6oQSuWs37",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "performance_tier",
          "type": "datatype.string",
          "description": "For virtual devices, specify the performance tier. Leave empty for physical devices.\nFTDv5\nFTDv10\nFTDv20\nFTDv30\nFTDv50\nFTDv100\nFTDv (For variable)",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XABV18JRVWD19ARjZKy1UtbAjaO2vegt2",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "is_url",
          "type": "datatype.boolean",
          "description": "true if URL license is required",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAC5D2DKXTY11qKtKjnLdRAQ8LodIpbMF",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "cdo_api_key",
          "type": "datatype.secure_string",
          "description": "Stores the API key used throughout the workflow",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "specific_device_uid",
          "type": "datatype.string",
          "description": "UID Returned by the /specific-device endpoint",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAF6VEO5NE04Lrm0pzxWyc5iLyyvOuxRs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "local",
          "name": "counter",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "device_name",
          "type": "datatype.string",
          "description": "What we want to name the device in CDO and FMC",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAA12TKPB872OZonoEd4TsRpWVmxDfhPs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "is_malware",
          "type": "datatype.boolean",
          "description": "true if malware license required",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAC5V1SHL270et51uiQDqy4yAUMK0F3OP",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "input",
          "name": "is_virtual",
          "type": "datatype.boolean",
          "description": "Set to true if this is a virtual FTD we are onboarding. ",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XABRVRWQSY82KB9NRg8fXFUduWX0Xw5qS",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "BASE",
          "scope": "local",
          "name": "entitlements",
          "type": "datatype.string",
          "description": "Dynamically build the license entitlements based on the workflow input.",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "ra_vpn",
          "type": "datatype.string",
          "description": "set to one of the following only if a VPN license is required, otherwise, leave blank.\nVPNOnly\nPLUS\nAPEX\nPLUS,APEX (For both PLUS and APEX)",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XAC6E9E3ALW5hy9cmNpD2xRFPWo9XPZO1",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "policy_id",
          "type": "datatype.string",
          "description": "The policy id that we are applying to the onboarded FTD",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01XB6RMVYO7BI5CG2Qpe2FsydNCkbxUWHaS",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Onboard an FTD to CDO cloud delivered FMC",
      "display_name": "Onboard FTD",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "target_id": "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR",
        "execute_on_workflow_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01XAJ0KEDDRO43P1hC5jkIGXJzbjawMoFwV",
        "name": "Condition Block",
        "title": "Webhook Start",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Webhook Start",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XAJ0KERXS1F16q5BNMVoMIKIF8gUGDQoc",
            "name": "Condition Branch",
            "title": "Is Started by Webhook",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.started_by$",
                "operator": "eq",
                "right_operand": "triggerevent_01XAHOQF5P3T37fbPdlIt6kYwBojZ1U74xM"
              },
              "continue_on_failure": false,
              "description": "If the workflow is started by the webhook, we need to set the input variable from the webook POST payload",
              "display_name": "Is Started by Webhook",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f",
                "name": "JSONPath Query",
                "title": "JSONPath Query",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "JSONPath Query",
                  "input_json": "$trigger.triggerevent_01XAHOQF5P3T37fbPdlIt6kYwBojZ1U74xM.output.request_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.device_name",
                      "jsonpath_query_name": "device_name",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.is_threat",
                      "jsonpath_query_name": "is_threat",
                      "jsonpath_query_type": "boolean"
                    },
                    {
                      "jsonpath_query": "$.is_url",
                      "jsonpath_query_name": "is_url",
                      "jsonpath_query_type": "boolean"
                    },
                    {
                      "jsonpath_query": "$.performance_tier",
                      "jsonpath_query_name": "performance_tier",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.ra_vpn",
                      "jsonpath_query_name": "ra_vpn",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.is_malware",
                      "jsonpath_query_name": "is_malware",
                      "jsonpath_query_type": "boolean"
                    },
                    {
                      "jsonpath_query": "$.is_virtual",
                      "jsonpath_query_name": "is_virtual",
                      "jsonpath_query_type": "boolean"
                    },
                    {
                      "jsonpath_query": "$.access_policy",
                      "jsonpath_query_name": "policy",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.cdo_api_key",
                      "jsonpath_query_name": "cdo_api_key",
                      "jsonpath_query_type": "secure_string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XAJ4OL0W9HB6kaShwlX39ipdJxxPrdrRc",
                "name": "Set Variables",
                "title": "Update input vars",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Update input vars",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAA12TKPB872OZonoEd4TsRpWVmxDfhPs$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.device_name$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC5V1SHL270et51uiQDqy4yAUMK0F3OP$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.is_malware$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC548W8C4B1sgysGDY1qTML6oQSuWs37$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.is_threat$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC5D2DKXTY11qKtKjnLdRAQ8LodIpbMF$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.is_url$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABRVRWQSY82KB9NRg8fXFUduWX0Xw5qS$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.is_virtual$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABV18JRVWD19ARjZKy1UtbAjaO2vegt2$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.performance_tier$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC6E9E3ALW5hy9cmNpD2xRFPWo9XPZO1$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.ra_vpn$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XB6OX2VFTRR3tKUlVzGGsC6heiU5Am3Yu$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.policy$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$",
                      "variable_value_new": "$activity.definition_activity_01XAJ1G48GTFK0cbTKf2VTFodnb4hsHNc0f.output.jsonpath_queries.cdo_api_key$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XAA0GST0EIH798q8em4XgwJbuwyyZ9I3V",
        "name": "HTTP Request",
        "title": "Check for duplicate name",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "description": "Check to see if the proposed name is already in use.",
          "display_name": "Check for duplicate name",
          "method": "GET",
          "relative_url": "/aegis/rest/v1/services/targets/devices?agg=count&q=name:$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAA12TKPB872OZonoEd4TsRpWVmxDfhPs$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAAQLUTUURY1FRT2OniVNDOZROQ3OaZBD",
        "name": "JSONPath Query",
        "title": "Extract duplicate name count",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract duplicate name count",
          "input_json": "$activity.definition_activity_01XAA0GST0EIH798q8em4XgwJbuwyyZ9I3V.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.aggregationQueryResult",
              "jsonpath_query_name": "aggregationQueryResult",
              "jsonpath_query_type": "integer"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAARL9ULDBC0am2SXdGeOnqdZ52l62HQi",
        "name": "Condition Block",
        "title": "Is Unique Device Name",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Check to see if the device name supplied already exists.",
          "display_name": "Is Unique Device Name",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XAARLA4XK7T1NTv8cPDx6uxmBhrOBsmwa",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XAAQLUTUURY1FRT2OniVNDOZROQ3OaZBD.output.jsonpath_queries.aggregationQueryResult$",
                "operator": "gt",
                "right_operand": 0
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XAAT0EFD1M91YcK01YmR89OUdKX0awWYS",
                "name": "Completed",
                "title": "End Workflow With Duplicate Name",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "End Workflow With Duplicate Name",
                  "result_message": "The device name provided already exists in CDO inventory.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XAATTLJM5ZK6jUCQWZ8uhlNwHQDXqOthQ",
        "name": "HTTP Request",
        "title": "Get UID of Cloud FMC",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "display_name": "Get UID of Cloud FMC",
          "method": "GET",
          "relative_url": "/aegis/rest/v1/services/targets/devices?q=deviceType:FMCE",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAB2S1ZWPQI2C6JYZMnmqqkwCcztxTHOq",
        "name": "JSONPath Query",
        "title": "Extract Cloud FMC UID",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": true,
          "display_name": "Extract Cloud FMC UID",
          "input_json": "$activity.definition_activity_01XAATTLJM5ZK6jUCQWZ8uhlNwHQDXqOthQ.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.[0:].uid",
              "jsonpath_query_name": "associatedDeviceUid",
              "jsonpath_query_type": "string"
            },
            {
              "jsonpath_query": "$.[0:].host",
              "jsonpath_query_name": "fmc_hostname",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XB5RHTE3JA80w3eV5akXv5L7id0ylCkFu",
        "name": "HTTP Request",
        "title": "Get FMC Domain uid",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "display_name": "Get FMC Domain uid",
          "method": "GET",
          "relative_url": "/aegis/rest/v1/device/$activity.definition_activity_01XAB2S1ZWPQI2C6JYZMnmqqkwCcztxTHOq.output.jsonpath_queries.associatedDeviceUid$/specific-device",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XB5TJ3YOS937UmXDyyduXyTSYSuHlF83R",
        "name": "JSONPath Query",
        "title": "Extract FMC Domain uid",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract FMC Domain uid",
          "input_json": "$activity.definition_activity_01XB5RHTE3JA80w3eV5akXv5L7id0ylCkFu.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.domainUid",
              "jsonpath_query_name": "domain_uid",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XB55LRGKMR267tsXXW7EtPL1UVAIy8ldV",
        "name": "HTTP Request",
        "title": "Get Access Policy List",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            },
            {
              "name": "fmc-hostname",
              "value": "$activity.definition_activity_01XAB2S1ZWPQI2C6JYZMnmqqkwCcztxTHOq.output.jsonpath_queries.fmc_hostname$"
            }
          ],
          "description": "Get the list of access policies that could be applied to the device at onboarding.",
          "display_name": "Get Access Policy List",
          "method": "GET",
          "relative_url": "/fmc/api/fmc_config/v1/domain/$activity.definition_activity_01XB5TJ3YOS937UmXDyyduXyTSYSuHlF83R.output.jsonpath_queries.domain_uid$/policy/accesspolicies?limit=1000",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XB6G1BFXKEF7N3aiaiaBXpqPcEKa8BqFV",
        "name": "Read Table from JSON",
        "title": "Extract Access Policies",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract Access Policies",
          "input_json": "$activity.definition_activity_01XB55LRGKMR267tsXXW7EtPL1UVAIy8ldV.output.response_body$",
          "jsonpath_query": "$.items",
          "persist_output": false,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "name",
              "column_type": "string"
            },
            {
              "column_name": "id",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XB6MXHKKRZB2HLW1uY9UplEA5gIuVNI0S",
        "name": "For Each",
        "title": "For Each Policy Returned",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "For Each Policy Returned",
          "skip_execution": false,
          "source_array": "$activity.definition_activity_01XB6G1BFXKEF7N3aiaiaBXpqPcEKa8BqFV.output.read_table_from_json$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_01XB6N7T33EI41X5DIVL9uhBPx9ZY7RhyYt",
            "name": "Condition Block",
            "title": "Find Requested Policy",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Find Requested Policy",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01XB6N7TJYY7L35RQdrEVZSzfJo2kJrnWtb",
                "name": "Condition Branch",
                "title": "Is policy requested",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_01XB6MXHKKRZB2HLW1uY9UplEA5gIuVNI0S.input.source_array[@].name$",
                    "operator": "eq",
                    "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XB6OX2VFTRR3tKUlVzGGsC6heiU5Am3Yu$"
                  },
                  "continue_on_failure": false,
                  "display_name": "Is policy requested",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01XB6RSIJJHH24Q94LqnMrPoLKye2YDYH9v",
                    "name": "Set Variables",
                    "title": "Set Policy ID",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set Policy ID",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XB6RMVYO7BI5CG2Qpe2FsydNCkbxUWHaS$",
                          "variable_value_new": "$activity.definition_activity_01XB6MXHKKRZB2HLW1uY9UplEA5gIuVNI0S.input.source_array[@].id$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XB6SGQM03851Q2ocRglq9u9QSCWKHIIt2",
        "name": "Condition Block",
        "title": "Check Policy Found",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check Policy Found",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XB6SGQZZFPR0P9W0KT7gxCy1fYviThE8I",
            "name": "Condition Branch",
            "title": "Is Policy Found",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XB6RMVYO7BI5CG2Qpe2FsydNCkbxUWHaS$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XABIGBGXU0I0OZnXFeQlnbSSRdWDnpsXx$"
              },
              "continue_on_failure": false,
              "display_name": "Is Policy Found",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XB6T3GD5AMR3S82Jwq85UZCFFhykyIq0m",
                "name": "Completed",
                "title": "Policy not Found",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Policy not Found",
                  "result_message": "The poilcy name provided was not found on the FMC.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XABH9H43WJ338BE4yBNvmPU6xQcWRoAkm",
        "name": "Condition Block",
        "title": "Does FMC Exists?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "If no cloud FMC exists, we need to stop.",
          "display_name": "Does FMC Exists?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XABH9HHUPQI5p1fxMzHv1lHLNvfg8owJM",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01XAB2S1ZWPQI2C6JYZMnmqqkwCcztxTHOq.output.jsonpath_queries.associatedDeviceUid$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XABIGBGXU0I0OZnXFeQlnbSSRdWDnpsXx$"
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XABHTM1XW9702T5hLjhQZiZ2lTypm3FEU",
                "name": "Completed",
                "title": "No FMC Found",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "No FMC Found",
                  "result_message": "There appears to be no FMC provisioned in this account.",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XABYV9DLKUW1SccbqUAAtMawz2QPRIQa7",
        "name": "Condition Block",
        "title": "Check Virtual Tier",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check Virtual Tier",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XABYV9QLY3H3CX44rFu5QFvushDKxYVy7",
            "name": "Condition Branch",
            "title": "Is Virtual",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABRVRWQSY82KB9NRg8fXFUduWX0Xw5qS$",
                  "operator": "eq",
                  "right_operand": true
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABV18JRVWD19ARjZKy1UtbAjaO2vegt2$",
                  "operator": "eq",
                  "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XABIGBGXU0I0OZnXFeQlnbSSRdWDnpsXx$"
                }
              },
              "continue_on_failure": false,
              "display_name": "Is Virtual",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XAC0JBSR2F14mATdmvpQx9eUYDrfVAFAN",
                "name": "Set Variables",
                "title": "Set Performance Tier",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Performance Tier",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABV18JRVWD19ARjZKy1UtbAjaO2vegt2$",
                      "variable_value_new": "FTDv"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XACJUA8YHRH1QW33BXDynkxdHqJkgHUBv",
        "name": "Group",
        "title": "Build License Entitlements",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Build License Entitlements",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_01XACBIDKZ4AY3a4mfYUKMFijToMhPdiFjM",
            "name": "Condition Block",
            "title": "Is THREAT",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Is THREAT",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01XACBIDYW0BP7EtQnDlmTcQgE8RWl3J69A",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC548W8C4B1sgysGDY1qTML6oQSuWs37$",
                    "operator": "eq",
                    "right_operand": true
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01XACCD2JCJ5Q1ee8TBJemFL2CUyZAI8MVo",
                    "name": "Set Variables",
                    "title": "Set THREAT",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set THREAT",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$",
                          "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$,THREAT"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_01XACCXSI9DAD7TeQPpEybjQMXEkNc5WSfb",
            "name": "Condition Block",
            "title": "Is URLFilter",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Is URLFilter",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01XACCXSI9XE51Lgv5gn4RrASE3jG1srmpP",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC5D2DKXTY11qKtKjnLdRAQ8LodIpbMF$",
                    "operator": "eq",
                    "right_operand": true
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01XACCXSIBSGE0uQ4qQn8RVOuNVBlRJ5tUr",
                    "name": "Set Variables",
                    "title": "Set URLFilter",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set URLFilter",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$",
                          "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$,URLFilter"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_01XACDJ9TBTXJ550sNx4L5xqXANTjknWnSN",
            "name": "Condition Block",
            "title": "Is MALWARE",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Is MALWARE",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01XACDJ9TCQIJ0OP1mZNQBve2sXJEDaDqAA",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC5V1SHL270et51uiQDqy4yAUMK0F3OP$",
                    "operator": "eq",
                    "right_operand": true
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01XACDJ9TEDMN5Oa6GQeeweiA86UuIqWzMn",
                    "name": "Set Variables",
                    "title": "Set MALWARE",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set MALWARE",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$",
                          "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$,MALWARE"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_01XACEPYD3IRC05TxLHPrF2Hmw5O12JcsB7",
            "name": "Condition Block",
            "title": "Is VPN",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Is VPN",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01XACEPYSETUR5U1KMYVuYJfKXnBkkBDrnV",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC6E9E3ALW5hy9cmNpD2xRFPWo9XPZO1$",
                    "operator": "ne",
                    "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XABIGBGXU0I0OZnXFeQlnbSSRdWDnpsXx$"
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01XACFI9QB2OM6MlkpOiR45FQ2WchFjOoDK",
                    "name": "Set Variables",
                    "title": "Set RAVPN",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Set RAVPN",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$",
                          "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$,$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAC6E9E3ALW5hy9cmNpD2xRFPWo9XPZO1$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XABJ9NM78X85IW6nM95UZYcDBj2TTUMAb",
        "name": "HTTP Request",
        "title": "Add Device to CDO Database",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json, text/plain, */*",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "body": "{\n\t\"associatedDeviceUid\": \"$activity.definition_activity_01XAB2S1ZWPQI2C6JYZMnmqqkwCcztxTHOq.output.jsonpath_queries.associatedDeviceUid$\",\n\t\"deviceType\": \"FTDC\",\n\t\"metadata\": {\n\t\t\"accessPolicyName\": \"$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XB6OX2VFTRR3tKUlVzGGsC6heiU5Am3Yu$\",\n\t\t\"accessPolicyUuid\": \"$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XB6RMVYO7BI5CG2Qpe2FsydNCkbxUWHaS$\",\n\t\t\"license_caps\": \"$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XACBFYQCNY82aJCDnoEhJaNxvY15OEPYE$\",\n\t\t\"performanceTier\": \"$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XABV18JRVWD19ARjZKy1UtbAjaO2vegt2$\"\n\t},\n\t\"model\": false,\n\t\"name\": \"$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAA12TKPB872OZonoEd4TsRpWVmxDfhPs$\",\n\t\"state\": \"NEW\",\n\t\"type\": \"devices\"\n}",
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "description": "Trigger the \"add device to CDO process\" and get back the onboarding token for the FTD CLI.",
          "display_name": "Add Device to CDO Database",
          "method": "POST",
          "relative_url": "/aegis/rest/v1/services/targets/devices",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAEZMTMPV6409l54nHYENFt3RzhgHgHhK",
        "name": "JSONPath Query",
        "title": "Extract Device uid",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract Device uid",
          "input_json": "$activity.definition_activity_01XABJ9NM78X85IW6nM95UZYcDBj2TTUMAb.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.uid",
              "jsonpath_query_name": "uid",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAEOMRRTQ9L1jxa4NMWHM6g5nKTo78ZWQ",
        "name": "While Loop",
        "title": "While Loop",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "While Loop",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XAEOMS6I80Z3Y729fxJiTmV3vBx0Jvduw",
            "name": "Condition Branch",
            "title": "Make Sure Device Exists in CDO",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$"
              },
              "continue_on_failure": false,
              "description": "Before we move to the next step, make sure the previous call has had a chance to be processed and added to the CDO backend.",
              "display_name": "Make Sure Device Exists in CDO",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XAEQAZ3RKJG5bqEmM2rCJ6oggkQ8wDcmg",
                "name": "HTTP Request",
                "title": "Get Specific Device",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
                    }
                  ],
                  "description": "Try to retrieve the specific device that was supposed to be created by the previous call. If we get a 200OK back, then we are good to move on. Otherwise, wait 5 seconds and try again.",
                  "display_name": "Get Specific Device",
                  "method": "GET",
                  "relative_url": "aegis/rest/v1/device/$activity.definition_activity_01XAEZMTMPV6409l54nHYENFt3RzhgHgHhK.output.jsonpath_queries.uid$/specific-device",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XAERCL4TYEV5x3ns4uU4hKqWMbllT1BsN",
                "name": "Condition Block",
                "title": "Is device found",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "if the device is found, we are clear to proceed.",
                  "display_name": "Is device found",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01XAERCLHU6UI2QB6Ssxt8XpyuU4bg9ikU9",
                    "name": "Condition Branch",
                    "title": "Condition Branch",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01XAEQAZ3RKJG5bqEmM2rCJ6oggkQ8wDcmg.output.status_code$",
                        "operator": "ne",
                        "right_operand": 200
                      },
                      "continue_on_failure": false,
                      "display_name": "Condition Branch",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XAEQD89Y8UA48nBYYmike8Z3iQzfF19cR",
                        "name": "Set Variables",
                        "title": "Increment Counter",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": true,
                          "display_name": "Increment Counter",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$",
                              "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$ + 1"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAEV1WMIMD13iHU20otRK90E9mT1Qt9H6",
                        "name": "Sleep",
                        "title": "Wait 5 Seconds",
                        "type": "core.sleep",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Wait 5 Seconds",
                          "skip_execution": false,
                          "sleep_interval": 5
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAEVO2XJM254g7Esd5162y48TWa6dakTs",
                        "name": "Condition Block",
                        "title": "Check Retry Exceeded",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Check to see if the number of retries have been exceeded.",
                          "display_name": "Check Retry Exceeded",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_01XAEVO3LT8MM4nVhamMWQN2Vw73M6Dw0r0",
                            "name": "Condition Branch",
                            "title": "Is retry exceeded",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$",
                                "operator": "gt",
                                "right_operand": 10
                              },
                              "continue_on_failure": false,
                              "display_name": "Is retry exceeded",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01XAEWEOCN92S2kf0SrVIViefpvAmfd6y3G",
                                "name": "Completed",
                                "title": "Exit - Failure",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Exit - Failure",
                                  "result_message": "Failed to add device to CDO Database",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01XAERCLXZ6OY0x4RCOxNDUmFFMnKv1kSUi",
                    "name": "Condition Branch",
                    "title": "Device Found",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$",
                        "operator": "eq",
                        "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$"
                      },
                      "continue_on_failure": false,
                      "display_name": "Device Found",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XAF7YHVLSE35xxhyWl8Mlr330NgawYbUo",
                        "name": "JSONPath Query",
                        "title": "Extract Specific Device uid",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Extract Specific Device uid",
                          "input_json": "$activity.definition_activity_01XAEQAZ3RKJG5bqEmM2rCJ6oggkQ8wDcmg.output.response_body$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.uid",
                              "jsonpath_query_name": "specific_device_uid",
                              "jsonpath_query_type": "string"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAF91U5IAES3NntYI2pPk7zMAMmSNpvEX",
                        "name": "Set Variables",
                        "title": "Set Specific Device UID",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set Specific Device UID",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAF6VEO5NE04Lrm0pzxWyc5iLyyvOuxRs$",
                              "variable_value_new": "$activity.definition_activity_01XAF7YHVLSE35xxhyWl8Mlr330NgawYbUo.output.jsonpath_queries.specific_device_uid$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAET4GD10RN6oYRBmyOABUIUYC4FwEWg2",
                        "name": "Break",
                        "title": "Proceed to the Next Step",
                        "type": "logic.break",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Proceed to the Next Step",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XAF47REBHII1ykEjo6QFDZFjAtTSmZnam",
        "name": "HTTP Request",
        "title": "Initiate FMC Onboarding",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "body": "{\n\t\t\"queueTriggerState\": \"INITIATE_FTDC_ONBOARDING\"\n}",
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "description": "Now that we know the device has made it into CDO, let's get it into FMC.",
          "display_name": "Initiate FMC Onboarding",
          "method": "PUT",
          "relative_url": "/aegis/rest/v1/services/firepower/ftds/$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAF6VEO5NE04Lrm0pzxWyc5iLyyvOuxRs$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAHA67ELOT77SKWFLnfu6OfivYkpKm8CE",
        "name": "Set Variables",
        "title": "Reset Counter",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Reset Counter",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$",
              "variable_value_new": 0
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAH2P8GLOA91BNqYLYWyw2lo6qOotNFWC",
        "name": "While Loop",
        "title": "Wait for State Machine",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Wait for the state machine to complete onboardning",
          "display_name": "Wait for State Machine",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01XAH2P93QMJL7FdzmEzswMDghQgekX2ObG",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$"
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01XAH39FZH5OI7MizWYYxqODQRJQ3qvfIeR",
                "name": "HTTP Request",
                "title": "Get Specific Device State Machine",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "allow_headers_redirect": false,
                  "continue_on_error_status_code": false,
                  "continue_on_failure": false,
                  "custom_headers": [
                    {
                      "name": "Authorization",
                      "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
                    }
                  ],
                  "display_name": "Get Specific Device State Machine",
                  "method": "GET",
                  "relative_url": "/aegis/rest/v1/device/$activity.definition_activity_01XAEZMTMPV6409l54nHYENFt3RzhgHgHhK.output.jsonpath_queries.uid$/specific-device",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XAH5WC5AKTU5iOTbfPWUqKIOdvRl8uiUA",
                "name": "JSONPath Query",
                "title": "Extract State",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Extract State",
                  "input_json": "$activity.definition_activity_01XAH39FZH5OI7MizWYYxqODQRJQ3qvfIeR.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.stateMachineDetails.stateMachineInstanceCondition",
                      "jsonpath_query_name": "state_machine_condition",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01XAH6P9VUBND1ukV89EgEJfXrzGQFK5eXb",
                "name": "Condition Block",
                "title": "Check State Machine Done",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Check State Machine Done",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01XAH6PABJSH75duThqcYHdzXQob3Dltcvm",
                    "name": "Condition Branch",
                    "title": "Is State Done",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01XAH5WC5AKTU5iOTbfPWUqKIOdvRl8uiUA.output.jsonpath_queries.state_machine_condition$",
                        "operator": "eq",
                        "right_operand": "DONE"
                      },
                      "continue_on_failure": false,
                      "display_name": "Is State Done",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XAH79ZFYP5D2VJoywHCtBVaAwRbtvLKAT",
                        "name": "Break",
                        "title": "State Machine Done - Break",
                        "type": "logic.break",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "State Machine Done - Break",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01XAH6PARBQ5O6606KmeBLqRhGFGgCCrYTL",
                    "name": "Condition Branch",
                    "title": "State not done",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$",
                        "operator": "eq",
                        "right_operand": "true$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.output.instance_id$"
                      },
                      "continue_on_failure": false,
                      "display_name": "State not done",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01XAH7XV6F2HK4DjYB9T2A6r3o4hXaAo21f",
                        "name": "Set Variables",
                        "title": "Increment Counter",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Increment Counter",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$",
                              "variable_value_new": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$ + 1"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAH8C72RYU72qvIQ68qkumuJO0qQi9DBQ",
                        "name": "Sleep",
                        "title": "Wait 5 Seconds",
                        "type": "core.sleep",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Wait 5 Seconds",
                          "skip_execution": false,
                          "sleep_interval": 5
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01XAH8PIYUB8K6DztoZNYXTJK9VJpJaWrcn",
                        "name": "Condition Block",
                        "title": "Retry Exceeded",
                        "type": "logic.if_else",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "We have exceeded the number of retries.",
                          "display_name": "Retry Exceeded",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity",
                        "blocks": [
                          {
                            "unique_name": "definition_activity_01XAH8PJG8ZJD4btihtZwJhbfJPEySIA82M",
                            "name": "Condition Branch",
                            "title": "Is Retries Exceeded",
                            "type": "logic.condition_block",
                            "base_type": "activity",
                            "properties": {
                              "condition": {
                                "left_operand": "$workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.local.variable_workflow_01XAEOT2VFKYL1RJw9ZmBkqN9Kjcoyeoh2S$",
                                "operator": "gt",
                                "right_operand": 10
                              },
                              "continue_on_failure": false,
                              "display_name": "Is Retries Exceeded",
                              "skip_execution": false
                            },
                            "object_type": "definition_activity",
                            "actions": [
                              {
                                "unique_name": "definition_activity_01XAH9KBM9HFR7S4x8gCWCDUmRSuoL3TJMv",
                                "name": "Completed",
                                "title": "Completed",
                                "type": "logic.completed",
                                "base_type": "activity",
                                "properties": {
                                  "completion_type": "failed-completed",
                                  "continue_on_failure": false,
                                  "display_name": "Completed",
                                  "result_message": "Timed out waiting for state machine",
                                  "skip_execution": false
                                },
                                "object_type": "definition_activity"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01XAFDTIVXN883zl3weRPO73rllXoPaMyux",
        "name": "HTTP Request",
        "title": "Get Generated Command",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Authorization",
              "value": "Bearer $workflow.definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo.input.variable_workflow_01XAAXLIRLPVJ0TssYtnsDpF4TASIXfrmEV$"
            }
          ],
          "description": "The UID is the UID returned by our original POST to /aegis/rest/v1/services/targets/devices",
          "display_name": "Get Generated Command",
          "method": "GET",
          "relative_url": "aegis/rest/v1/services/targets/devices/$activity.definition_activity_01XAEZMTMPV6409l54nHYENFt3RzhgHgHhK.output.jsonpath_queries.uid$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01XAFO8NRII604nbrE4YhFTOQdPppWJo5Rf",
        "name": "JSONPath Query",
        "title": "Extract Generated Command",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Extract Generated Command",
          "input_json": "$activity.definition_activity_01XAFDTIVXN883zl3weRPO73rllXoPaMyux.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.metadata.generatedCommand",
              "jsonpath_query_name": "generated_command",
              "jsonpath_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "triggers": {
    "triggerevent_01XAHOQF5P3T37fbPdlIt6kYwBojZ1U74xM": {
      "workflow_id": "definition_workflow_01XA9YONXBUFF1Ba3sx8oRknTP364C2Jvzo",
      "name": "onboard_ftd",
      "title": "",
      "lowercase_name": "event.onboard_ftd",
      "description": "Webhook that onboards and FTD with the given parameters",
      "type": "event",
      "base_type": "trigger",
      "ref_id": "event_webhook_01XAHOO2COPE73GHWKx32y0hm3PhjoUxaNm",
      "version": "1.0.0",
      "disabled": false,
      "unique_name": "triggerevent_01XAHOQF5P3T37fbPdlIt6kYwBojZ1U74xM",
      "object_type": "triggerevent"
    }
  },
  "events": {
    "event_webhook_01XAHOO2COPE73GHWKx32y0hm3PhjoUxaNm": {
      "name": "CDO-ONBOARD-FTD-to-FMC",
      "title": "CDO-ONBOARD-FTD-to-FMC",
      "description": "Onboard an FTD to a CDO deilvered FMC.",
      "type": "webhook.event",
      "base_type": "event",
      "object_type": "event_webhook",
      "target_id": "",
      "webhook_id": "webhook_01XAHOLGQMEFM0OKeXgfmXU8QuIEKhYOMKd",
      "version": "1.0.0",
      "properties": {
        "description": "Onboard an FTD to a CDO deilvered FMC.",
        "display_name": "CDO-OBOARD-FTD-to-FMC",
        "title": "CDO-ONBOARD-FTD-to-FMC",
        "webhook_id": "webhook_01XAHOLGQMEFM0OKeXgfmXU8QuIEKhYOMKd"
      },
      "unique_name": "event_webhook_01XAHOO2COPE73GHWKx32y0hm3PhjoUxaNm"
    }
  },
  "targets": {
    "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR": {
      "unique_name": "definition_target_01W7XDQ55LIBW7MZ9VU2ygaJwgOXwLLkzuR",
      "name": "CDO-US",
      "title": "CDO-US",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": false,
        "display_name": "CDO-US",
        "host": "www.defenseorchestrator.com",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "port": 443,
        "protocol": "https"
      }
    }
  },
  "webhooks": {
    "webhook_01XAHOLGQMEFM0OKeXgfmXU8QuIEKhYOMKd": {
      "name": "ONBOARD FTD TO CDO FMC",
      "title": "ONBOARD FTD TO CDO FMC",
      "type": "generic.webhook",
      "base_type": "webhook",
      "object_type": "webhook",
      "version": "1.0.0",
      "properties": {
        "display_name": "ONBOARD FTD TO CDO FMC",
        "request_content_type": "application/json"
      },
      "unique_name": "webhook_01XAHOLGQMEFM0OKeXgfmXU8QuIEKhYOMKd"
    }
  }
}